"use strict";(self.webpackChunkdefra=self.webpackChunkdefra||[]).push([[9155],{19753:function(e,t,a){a.r(t),a.d(t,{createArcadeExecutor:function(){return T},createArcadeProfile:function(){return x}});var r=a(59469),n=a(9688),o=a(93849),c=a(39819),s=a(21609),i=a(42042),l=a(70891),u=a(57534),p=a(51432),f=a(51084),y=a(54547);let m=null;function d(e,t,a,r={}){const n=t.elementType,c="value",s="array"===n.type?[{name:c,type:n.type,elementType:n.elementType}]:"dictionary"===n.type?[{name:c,type:n.type,properties:n.properties}]:[{name:c,type:n.type}];return new o.A(e.map((e=>{const t={};return v(t,s,{[c]:e},a,r),t[c]})))}function b(e,t,a={}){const r=e instanceof f.A?new u.default({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return t.constructFeatureSet(r,a.spatialReference,null,!0,a.lruCache,a.interceptor)}function h(e,t,a={}){const{spatialReference:r,interceptor:n,lruCache:o}=a;return"string"==typeof e?t.createFeatureSetCollectionFromService(e,r,o,n):t.createFeatureSetCollectionFromMap(e,r,o,n)}function g(e,t,a,r={}){const n={};return v(n,t.properties,e,a,r),new m.Dictionary(n)}function v(e,t,a,r,o={}){const c={};for(const e of Object.keys(a))c[e.toLowerCase()]=a[e];for(const a of t){const t=a.name.toLowerCase();if(o.variablesPreProcessed)e[t]=c[t];else switch(a.type){case"array":{const n=c[t];e[t]=null==n?null:d(n,a,r,o);break}case"feature":{const a=c[t];e[t]=null==a?null:m.Feature.createFromGraphic(a,o?.timeZone);break}case"featureSet":{const a=c[t];e[t]=null==a?null:r?b(a,r,o):null;break}case"featureSetCollection":{const a=c[t];e[t]=null==a?null:r?h(a,r,o):null;break}case"dictionary":{const n=c[t];e[t]=null==n?null:g(n,a,r,o);break}case"date":{const a=c[t];e[t]=a?a instanceof n.lY?a:o?.timeZone?n.lY.dateJSAndZoneToArcadeDate(a,o?.timeZone):n.lY.dateJSToArcadeDate(a):null;break}case"dateOnly":{const a=c[t];e[t]=a?a instanceof i.n?a:i.n.fromReader(a):null;break}case"time":{const a=c[t];e[t]=a?a instanceof l.k?a:l.k.fromReader(a):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[t]=c[t]}}}function w(e,t){for(const a of e)t.push(a),"dictionary"===a.type&&w(a.properties,t);return t}function S(e,t,a,r,n){const{spatialReference:o,interceptor:c,lruCache:s,console:i,abortSignal:l,timeZone:u,services:f={portal:p.A.getDefault()}}=a,y={vars:{},spatialReference:o,interceptor:c,timeZone:u,lrucache:s,useAsync:n,services:f,console:i,abortSignal:l};return t?(v(y.vars,e.variables,t,r,a),y):y}function $(e,t){switch(t.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"time":case"dateOnly":return e.toString();case"feature":{const t=(e.type,e),a="geometry"in t?t.geometry():null,n="readAttributes"in t?t.readAttributes():t.attributes;return new r.default({geometry:a,attributes:n})}case"dictionary":{const a=e,r=a.attributes,n={};for(const e of Object.keys(r))n[e]=$(a.field(e),t);return n}case"array":return("toArray"in e?e.toArray():e).map((e=>$(e,t)))}return e}const A={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"}]},C={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"}]},k=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"}]}],["popup",A],["popup-element",A],["feature-reduction-popup",C],["feature-reduction-popup-element",C],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"}]}]}]]);function x(e){const t=k.get(e);if(!t){const t=Array.from(k.keys()).map((e=>`'${e}'`)).join(", ");throw new c.A("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${t}`)}return(0,s.o8)(t)}async function T(e,t,a={}){m||(m=await(0,y.lw)());const{arcade:r,arcadeUtils:n}=m,{loadScriptDependencies:o,referencesMember:s,scriptIsAsync:i}=r,l=w(t.variables,[]),u=l.filter((e=>"featureSet"===e.type||"featureSetCollection"===e.type)).map((e=>e.name.toLowerCase())),p=r.parseScript(e,u);if(!p)throw new c.A("arcade:invalid-script","Unable to create SyntaxTree");const f=n.extractFieldNames(p),d=r.scriptTouchesGeometry(p),b=l.map((e=>e.name.toLowerCase())).filter((e=>s(p,e))),h=i(p,u);await o(p,h,u);const g={vars:{},spatialReference:null,useAsync:h};for(const e of b)g.vars[e]="any";const{lruCache:v}=a,A=r.compileScript(p,g),C=r.featureSetUtils(),{services:k}=a;return{execute:(e,a={})=>{if(h)throw new c.A("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const r=A(S(t,e,{lruCache:v,...a},C,h));return a.rawOutput?r:$(r,n)},executeAsync:async(e,a={})=>{const r=await A(S(t,e,{lruCache:v,services:k,...a},C,h));return a.rawOutput?r:$(r,n)},isAsync:h,variablesUsed:b,fieldsUsed:f,geometryUsed:d,syntaxTree:p}}},93849:function(e,t,a){a.d(t,{A:function(){return r}});class r{constructor(e=[]){this._elements=e}length(){return this._elements.length}get(e){return this._elements[e]}toArray(){return this.slice()}slice(e=0,t=this.length()){const a=[];for(let r=e;r<t;r++)a.push(this.get(r));return a}}}}]);
//# sourceMappingURL=arcade.js.map