/*! For license information please see 4060.js.LICENSE.txt */
"use strict";(self.webpackChunkdefra=self.webpackChunkdefra||[]).push([[4060],{64060:function(e,t,s){s.r(t),s.d(t,{scopeCss:function(){return T}});var r="-shadowcsshost",c="-shadowcssslotted",n="-shadowcsscontext",o=")(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))?([^,{]*)",l=new RegExp("("+r+o,"gim"),p=new RegExp("("+n+o,"gim"),a=new RegExp("("+c+o,"gim"),i=r+"-no-combinator",u=/-shadowcsshost-no-combinator([^\s]*)/,h=[/::shadow/g,/::content/g],g=/-shadowcsshost/gim,d=e=>new RegExp(`((?<!(^@supports(.*)))|(?<={.*))(${e}\\b)`,"gim"),m=d("::slotted"),$=d(":host"),f=d(":host-context"),x=/\/\*\s*[\s\S]*?\*\//g,w=/\/\*\s*#\s*source(Mapping)?URL=[\s\S]+?\*\//g,S=/(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g,b=/([{}])/g,_=/(^.*?[^\\])??((:+)(.*)|$)/,k="%BLOCK%",E=(e,t,s)=>e.replace(t,((...e)=>{if(e[2]){const t=e[2].split(","),r=[];for(let c=0;c<t.length;c++){const n=t[c].trim();if(!n)break;r.push(s(i,n,e[3]))}return r.join(",")}return i+e[3]})),O=(e,t,s)=>e+t.replace(r,"")+s,R=(e,t,s)=>t.indexOf(r)>-1?O(e,t,s):e+t+s+", "+t+" "+e+s,j=(e,t)=>e.replace(_,((e,s="",r,c="",n="")=>s+t+c+n)),C=(e,t,s,r)=>(e=>{const c=(e=>{const t=e.split(b),s=[],r=[];let c=0,n=[];for(let e=0;e<t.length;e++){const o=t[e];"}"===o&&c--,c>0?n.push(o):(n.length>0&&(r.push(n.join("")),s.push(k),n=[]),s.push(o)),"{"===o&&c++}return n.length>0&&(r.push(n.join("")),s.push(k)),{escapedString:s.join(""),blocks:r}})(e);let n=0;return c.escapedString.replace(S,((...e)=>{const o=e[2];let l="",p=e[4],a="";p&&p.startsWith("{"+k)&&(l=c.blocks[n++],p=p.substring(8),a="{");const h=(e=>{let c=e.selector,n=e.content;return"@"!==e.selector[0]?c=((e,t,s,r)=>e.split(",").map((e=>r&&e.indexOf("."+r)>-1?e.trim():((e,t)=>!(e=>(e=e.replace(/\[/g,"\\[").replace(/\]/g,"\\]"),new RegExp("^("+e+")([>\\s~+[.,{:][\\s\\S]*)?$","m")))(t).test(e))(e,t)?((e,t,s)=>{const r="."+(t=t.replace(/\[is=([^\]]*)\]/g,((e,...t)=>t[0]))),c=e=>{let c=e.trim();if(!c)return"";if(e.indexOf(i)>-1)c=((e,t,s)=>{if(g.lastIndex=0,g.test(e)){const t=`.${s}`;return e.replace(u,((e,s)=>j(s,t))).replace(g,t+" ")}return t+" "+e})(e,t,s);else{const t=e.replace(g,"");t.length>0&&(c=j(t,r))}return c},n=(e=>{const t=[];let s=0;return{content:(e=e.replace(/(\[[^\]]*\])/g,((e,r)=>{const c=`__ph-${s}__`;return t.push(r),s++,c}))).replace(/(:nth-[-\w]+)(\([^)]+\))/g,((e,r,c)=>{const n=`__ph-${s}__`;return t.push(c),s++,r+n})),placeholders:t}})(e);let o,l="",p=0;const a=/( |>|\+|~(?!=))\s*/g;let h=!((e=n.content).indexOf(i)>-1);for(;null!==(o=a.exec(e));){const t=o[1],s=e.slice(p,o.index).trim();h=h||s.indexOf(i)>-1,l+=`${h?c(s):s} ${t} `,p=a.lastIndex}const d=e.substring(p);return h=h||d.indexOf(i)>-1,l+=h?c(d):d,m=n.placeholders,l.replace(/__ph-(\d+)__/g,((e,t)=>m[+t]));var m})(e,t,s).trim():e.trim())).join(", "))(e.selector,t,s,r):(e.selector.startsWith("@media")||e.selector.startsWith("@supports")||e.selector.startsWith("@page")||e.selector.startsWith("@document"))&&(n=C(e.content,t,s,r)),{selector:c.replace(/\s{2,}/g," ").trim(),content:n}})({selector:o,content:l});return`${e[1]}${h.selector}${e[3]}${a}${h.content}${p}`}))})(e),W=(e,t)=>e.replace(/-shadowcsshost-no-combinator/g,`.${t}`),T=(e,t)=>{const s=t+"-h",o=t+"-s",u=e.match(w)||[];const g=((e,t,s,o)=>{const u=((e,t)=>{const s="."+t+" > ",r=[];return e=e.replace(a,((...e)=>{if(e[2]){const t=e[2].trim(),c=e[3],n=s+t+c;let o="";for(let t=e[4]-1;t>=0;t--){const s=e[5][t];if("}"===s||","===s)break;o=s+o}const l=(o+n).trim(),p=`${o.trimEnd()}${n.trim()}`.trim();if(l!==p){const e=`${p}, ${l}`;r.push({orgSelector:l,updatedSelector:e})}return n}return i+e[3]})),{selectors:r,cssText:e}})(e=(e=>E(e,p,R))(e=(e=>E(e,l,O))(e=(e=>e.replace(f,`$1${n}`).replace($,`$1${r}`).replace(m,`$1${c}`))(e))),o);return e=(e=>h.reduce(((e,t)=>e.replace(t," ")),e))(e=u.cssText),t&&(e=C(e,t,s,o)),{cssText:(e=(e=W(e,s)).replace(/>\s*\*\s+([^{, ]+)/gm," $1 ")).trim(),slottedSelectors:u.selectors.map((e=>({orgSelector:W(e.orgSelector,s),updatedSelector:W(e.updatedSelector,s)})))}})(e=e.replace(x,""),t,s,o);return e=[g.cssText,...u].join("\n"),g.slottedSelectors.forEach((t=>{const s=new RegExp(t.orgSelector.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"g");e=e.replace(s,t.updatedSelector)})),e}}}]);
//# sourceMappingURL=4060.js.map