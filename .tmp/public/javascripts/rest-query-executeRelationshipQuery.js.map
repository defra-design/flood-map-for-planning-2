{"version":3,"file":"rest-query-executeRelationshipQuery.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACmP,wBAAwB,EAAE,qEAAC,SAAS,QAAQ,mDAAC,IAAI,OAAO,4FAAC,kBAAkB,oBAAoB,uCAAuC,8DAAC,oBAAoB,GAAG,wBAAwB,EAAE,qEAAC,SAAS,QAAQ,mDAAC,IAAI,OAAO,oGAAC,MAAM,KAAK,oBAAgG;;;;;;;;;;;;;;;;;;;;ACJrjB;AACA;AACA;AACA;AACmL,gBAAgB,mBAAmB,uQAAuQ,yFAAC,yDAAyD,2BAA2B,gCAAgC,wBAAwB,2EAA2E,sCAAsC,SAAS,gIAAgI,oCAAoC,qEAAqE,OAAO,aAAa,wBAAwB,uBAAuB,mBAAmB,gBAAgB,+EAA+E,OAAO,aAAa,yBAAyB,IAAI,QAAQ,sEAAC,EAAE,mCAAmC,EAAE,OAAO,uDAAC,gCAAgC,YAAY,iBAAiB,EAA2G","sources":["webpack://defra/./node_modules/@arcgis/core/rest/query/executeRelationshipQuery.js","webpack://defra/./node_modules/@arcgis/core/rest/query/operations/queryRelatedRecords.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport{parseUrl as t}from\"../utils.js\";import{executeRelationshipQuery as r,executeRelationshipQueryForCount as e}from\"./operations/queryRelatedRecords.js\";import o from\"../support/FeatureSet.js\";import s from\"../support/RelationshipQuery.js\";async function n(e,n,u){n=s.from(n);const a=t(e);return r(a,n,u).then((t=>{const r=t.data,e={};return Object.keys(r).forEach((t=>e[t]=o.fromJSON(r[t]))),e}))}async function u(r,o,n){o=s.from(o);const u=t(r);return e(u,o,{...n}).then((t=>t.data))}export{n as executeRelationshipQuery,u as executeRelationshipQueryForCount};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport e from\"../../../request.js\";import{srToRESTValue as t}from\"../../../geometry/support/spatialReferenceUtils.js\";import{mapParameters as o}from\"../../operations/urlUtils.js\";function r(e,o){const r=e.toJSON();return r.objectIds&&(r.objectIds=r.objectIds.join(\",\")),r.orderByFields&&(r.orderByFields=r.orderByFields.join(\",\")),r.outFields&&!o?.returnCountOnly?r.outFields.includes(\"*\")?r.outFields=\"*\":r.outFields=r.outFields.join(\",\"):delete r.outFields,r.outSR&&(r.outSR=t(r.outSR)),r.dynamicDataSource&&(r.layer=JSON.stringify({source:r.dynamicDataSource}),delete r.dynamicDataSource),r}async function s(e,t,o){const r=await a(e,t,o),s=r.data,n=s.geometryType,d=s.spatialReference,c={};for(const a of s.relatedRecordGroups){const e={fields:void 0,objectIdFieldName:void 0,geometryType:n,spatialReference:d,hasZ:!!s.hasZ,hasM:!!s.hasM,features:a.relatedRecords};if(null!=a.objectId)c[a.objectId]=e;else for(const t of Object.keys(a))\"relatedRecords\"!==t&&(c[a[t]]=e)}return{...r,data:c}}async function n(e,t,o){const r=await a(e,t,o,{returnCountOnly:!0}),s=r.data,n={};for(const a of s.relatedRecordGroups)null!=a.objectId&&(n[a.objectId]=a.count);return{...r,data:n}}async function a(t,s,n={},a){const d=o({...t.query,f:\"json\",...a,...r(s,a)});return e(t.path+\"/queryRelatedRecords\",{...n,query:{...n.query,...d}})}export{s as executeRelationshipQuery,n as executeRelationshipQueryForCount,r as toQueryStringParameters};\n"],"names":[],"sourceRoot":""}